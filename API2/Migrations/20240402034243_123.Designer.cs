// <auto-generated />
using System;
using API2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240402034243_123")]
    partial class _123
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API2.Models.Courses", b =>
                {
                    b.Property<Guid>("CoursesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoursesName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoursesId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CoursesId = new Guid("98474b8e-d713-401e-8aee-acb7353f97bb"),
                            CoursesName = "Web API______1",
                            Description = "Cách để có công việc nhàn. Cách 1 : làm giáo viên"
                        });
                });

            modelBuilder.Entity("API2.Models.Students", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("90d10994-3bdd-4ca2-a178-6a35fd653c59"),
                            Name = "Kim Hoan "
                        });
                });

            modelBuilder.Entity("API2.Models.StudentsCourses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CoursesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CoursesId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentsCourses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoursesId = new Guid("98474b8e-d713-401e-8aee-acb7353f97bb"),
                            StudentId = new Guid("90d10994-3bdd-4ca2-a178-6a35fd653c59")
                        });
                });

            modelBuilder.Entity("API2.Models.StudentsCourses", b =>
                {
                    b.HasOne("API2.Models.Courses", "course")
                        .WithMany("StudentsCourses")
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API2.Models.Students", "student")
                        .WithMany("StudentsCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("student");
                });

            modelBuilder.Entity("API2.Models.Courses", b =>
                {
                    b.Navigation("StudentsCourses");
                });

            modelBuilder.Entity("API2.Models.Students", b =>
                {
                    b.Navigation("StudentsCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
